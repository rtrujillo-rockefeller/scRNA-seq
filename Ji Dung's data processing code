## Data processing for Alan's scSeq
## Sample information
base_dir <- "/rugpfs/fs0/brc/store/jluo/scSeq_PRJNA730553_20210603"
sample_sheet <- data.frame(GenomicsID=c("HH21_run1","HH21_run2","HH24_run1","HH24_run2"),
                           FQLocation=c(file.path(base_dir,"HH21"),
                                        file.path(base_dir,"HH21"),
                                        file.path(base_dir,"HH24"),
                                        file.path(base_dir,"HH24")),
                           Group=c("HH21","HH21","HH24","HH24"),
                           replicat=c("run1","run2","run1","run2"),
                           samPrefix=c("BSSE_QGF_110805_HF7C7BGX9_1_L21_SI-GA-E1",
                                       "BSSE_QGF_110805_HJGTWBGX7_1_L21_SI-GA-E1",
                                       "BSSE_QGF_110806_HF7C7BGX9_1_L24_SI-GA-F1",
                                       "BSSE_QGF_110806_HJGTWBGX7_1_L24_SI-GA-F1"),
                           InputToUse=NA,toMerge=NA,BroadCall=NA,
                           stringsAsFactors = FALSE)
write.table(sample_sheet,file.path(base_dir,"sampleSheet_scSeq_PRJNA730553_20210605.csv"),
            sep=",",quote = FALSE,row.names = FALSE)
##
## Counting with CellRanger
library(BiocParallel)
library(batchtools)
tmp_file <- "/rugpfs/fs0/brc/scratch/jluo/bt-simple.tmpl"
param <- BatchtoolsParam(workers=10000, cluster="slurm",template=tmp_file)
register(param)
#
sample_sheet <- read.delim(file.path(base_dir,"sampleSheet_scSeq_PRJNA730553_20210605.csv"),
                           sep=",",stringsAsFactors = FALSE)
ref_dir <- "/rugpfs/fs0/brc/store/jluo/ref_genome/refdata-Gallus_gallus_GRCg6a_95"
#
CR_count <- function(samID,smSheet=NULL,ref_file=NULL){
  fq <- smSheet$FQLocation[smSheet$GenomicsID==samID]
  prefix <- smSheet$samPrefix[smSheet$GenomicsID==samID]
  system(paste("/rugpfs/fs0/home/jluo/bin/cellranger_v6 count",
               paste0("--id=",samID,"_count"), # sample id
               paste0("--fastqs=",fq), # fastq file directory
               paste0("--sample=",prefix), # prefix used
               paste0("--transcriptome=",ref_file),sep=" "))} # Set reference file
setwd(base_dir)
register(SerialParam()) # avoid run out of memory
bplapply(sample_sheet$GenomicsID,CR_count,
         smSheet=sample_sheet,
         ref_file=ref_dir)
## Merge datasets
# cca_function
build_cca <- function(samID,smSheet=sample_sheet,species=NULL,matrix_dir=NULL){
  library(Seurat)
  mat_dir <- dir(matrix_dir,pattern = samID)
  sam_fold <- file.path(mat_dir,"outs","filtered_feature_bc_matrix")
  X10_file <- Seurat::Read10X(sam_fold)
  pbmc <- CreateSeuratObject(counts = X10_file, project = samID, min.cells = 5)
  pbmc$dset <- samID
  if(species=="mouse"){
    pbmc[["percent.mt"]] <- PercentageFeatureSet(pbmc, pattern = "^mt-")
  }else{
    pbmc[["percent.mt"]] <- PercentageFeatureSet(pbmc, pattern = "^MT-")}
  pbmc <- Seurat::RenameCells(pbmc,add.cell.id=samID)
  pbmc <- NormalizeData(pbmc, verbose = FALSE)
  pbmc <- FindVariableFeatures(pbmc, selection.method = "vst", 
                               nfeatures = 2000, verbose = FALSE)
  pbmc}
#
# HH21
sample_id <- c("HH21_run1","HH21_run2")
cca_list <- list()
for(k in 1:length(sample_id)){
  cca_list[[k]] <- build_cca(samID=sample_id[k],smSheet=sample_sheet,species = "chicken",
                             matrix_dir=file.path(base_dir))}
names(cca_list) <- sample_id
cca_anchor <- FindIntegrationAnchors(object.list = cca_list,dims = 1:20)
pbmc <- IntegrateData(anchorset = cca_anchor)
saveRDS(pbmc,file.path(base_dir,"scSeq_HH21_int.rds"))
#
# HH24
sample_id <- c("HH24_run1","HH24_run2")
cca_list <- list()
for(k in 1:length(sample_id)){
  cca_list[[k]] <- build_cca(samID=sample_id[k],smSheet=sample_sheet,species = "chicken",
                             matrix_dir=file.path(base_dir))}
names(cca_list) <- sample_id
cca_anchor <- FindIntegrationAnchors(object.list = cca_list,dims = 1:20)
pbmc <- IntegrateData(anchorset = cca_anchor)
saveRDS(pbmc,file.path(base_dir,"scSeq_HH24_int.rds"))
##
## Cellranger aggr
# aggr function
CR_aggr <- function(aggr_file,obj=NULL){
  system(paste("/rugpfs/fs0/home/jluo/bin/cellranger_v6 aggr",
               paste0("--id=",obj),
               paste0("--csv=",aggr_file),sep=" "))}
#
# HH21
aggr_tab <- data.frame(sample_id=c("HH21_run1","HH21_run2"),
                       molecule_h5=c(file.path(base_dir,"HH21_run1_count","outs","molecule_info.h5"),
                                     file.path(base_dir,"HH21_run2_count","outs","molecule_info.h5")),
                       stringsAsFactors = FALSE)
write.table(aggr_tab,file.path(base_dir,"aggrInfo_HH21.csv"),
            sep=",",row.names = FALSE,quote = FALSE)
bplapply(file.path(base_dir,"aggrInfo_HH21.csv"),CR_aggr,obj="aggr_HH21")
#
# HH24
aggr_tab <- data.frame(sample_id=c("HH24_run1","HH24_run2"),
                       molecule_h5=c(file.path(base_dir,"HH24_run1_count","outs","molecule_info.h5"),
                                     file.path(base_dir,"HH24_run2_count","outs","molecule_info.h5")),
                       stringsAsFactors = FALSE)
write.table(aggr_tab,file.path(base_dir,"aggrInfo_HH24.csv"),
            sep=",",row.names = FALSE,quote = FALSE)
bplapply(file.path(base_dir,"aggrInfo_HH24.csv"),CR_aggr,obj="aggr_HH24")
##
## Rebuild for LOUPE file
library(Seurat)
base_dir <- "~/Desktop/scSeq_PRJNA730553_20210603"
#
pbmc <- readRDS(file.path(base_dir,"scSeq_HH21_reClust.rds"))
meta_tab <- pbmc@meta.data
umap <- Embeddings(pbmc,reduction = "umap")
tsne <- Embeddings(pbmc,reduction = "tsne")
umapX <- umap[,"UMAP_1"]
meta_tab$umapX <- umap[,"UMAP_1"]
meta_tab$umapY <- umap[,"UMAP_2"]
meta_tab$tsneX <- tsne[,"tSNE_1"]
meta_tab$tsneY <- tsne[,"tSNE_2"]
meta_tab$Barcode[grepl(meta_tab$dset,pattern="_run1")] <- gsub("(.*)_(.*)_(.*)-1","\\3-1",
                                                                rownames(meta_tab)[grepl(meta_tab$dset,pattern="_run1")])
meta_tab$Barcode[grepl(meta_tab$dset,pattern="_run2")] <- gsub("(.*)_(.*)_(.*)-1","\\3-2",
                                                                rownames(meta_tab)[grepl(meta_tab$dset,pattern="_run2")])
umap_tab <- dplyr::select(meta_tab,Barcode,umapX,umapY)
names(umap_tab) <-c("Barcode","X","Y")
tsne_tab <- dplyr::select(meta_tab,Barcode,tsneX,tsneY)
names(tsne_tab) <-c("Barcode","X","Y")
clust_tab <- dplyr::select(meta_tab,Barcode,seurat_clusters)
write.table(umap_tab,file.path(base_dir,"Seurat_UMAP_HH21.csv"),sep=",",row.names = FALSE,quote = FALSE)
write.table(tsne_tab,file.path(base_dir,"Seurat_tSNE_HH21.csv"),sep=",",row.names = FALSE,quote = FALSE)
write.table(clust_tab,file.path(base_dir,"Seurat_clust_HH21.csv"),sep=",",row.names = FALSE,quote = FALSE)
#
pbmc <- readRDS(file.path(base_dir,"scSeq_HH24_reClust.rds"))
meta_tab <- pbmc@meta.data
umap <- Embeddings(pbmc,reduction = "umap")
tsne <- Embeddings(pbmc,reduction = "tsne")
umapX <- umap[,"UMAP_1"]
meta_tab$umapX <- umap[,"UMAP_1"]
meta_tab$umapY <- umap[,"UMAP_2"]
meta_tab$tsneX <- tsne[,"tSNE_1"]
meta_tab$tsneY <- tsne[,"tSNE_2"]
meta_tab$Barcode[grepl(meta_tab$dset,pattern="_run1")] <- gsub("(.*)_(.*)_(.*)-1","\\3-1",
                                                               rownames(meta_tab)[grepl(meta_tab$dset,pattern="_run1")])
meta_tab$Barcode[grepl(meta_tab$dset,pattern="_run2")] <- gsub("(.*)_(.*)_(.*)-1","\\3-2",
                                                               rownames(meta_tab)[grepl(meta_tab$dset,pattern="_run2")])
umap_tab <- dplyr::select(meta_tab,Barcode,umapX,umapY)
names(umap_tab) <-c("Barcode","X","Y")
tsne_tab <- dplyr::select(meta_tab,Barcode,tsneX,tsneY)
names(tsne_tab) <-c("Barcode","X","Y")
clust_tab <- dplyr::select(meta_tab,Barcode,seurat_clusters)
write.table(umap_tab,file.path(base_dir,"Seurat_UMAP_HH24.csv"),sep=",",row.names = FALSE,quote = FALSE)
write.table(tsne_tab,file.path(base_dir,"Seurat_tSNE_HH24.csv"),sep=",",row.names = FALSE,quote = FALSE)
write.table(clust_tab,file.path(base_dir,"Seurat_clust_HH24.csv"),sep=",",row.names = FALSE,quote = FALSE)
##
## END
